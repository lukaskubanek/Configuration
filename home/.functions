#############
# Functions #
#############

# An alternative command line prompt to the one from rbenv plugin for oh-my-zsh,
# because its parsing of the active gemset does not work.
# Related links:
# - https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/rbenv/rbenv.plugin.zsh
# - https://github.com/jf/rbenv-gemset/blob/master/libexec/rbenv-gemset-active
rbenv_prompt_info2() {
    current_ruby=$(rbenv version-name)
    gemset_file=$(rbenv gemset file 2>/dev/null || true)
    if [ -n "$gemset_file" ]; then
        current_gemset=$(cat "$gemset_file")
        echo "$current_ruby@$current_gemset"
    else
        echo "$current_ruby"
    fi
}

# `cd` replacement for projects
# (taken from https://coderwall.com/p/feoi0a)
code_dir="$HOME/Projects"
wo() {
    if [ -z $* ]; then
        echo "Please provide the name of the project you want to work on."
        return;
    fi
    cd $(find $code_dir -type d -maxdepth 3 | grep -i $* | grep -Ev Pods/ --max-count=1)
}

# Fix the bug with "Open With" duplicated
# (taken from https://github.com/aziz/dotfiles/blob/master/bash/aliases/osx.aliases.bash)
fix-open-with-duplicates() {
    /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -kill -r -domain local -domain user
    killall Finder
    echo '"Open With" has been rebuilt, Finder will relaunch.'
}

# Unhide the ~/Library folder
show-library() {
    chflags nohidden $HOME/Library/
}

# Show hidden files in Finder
show-hidden-files() {
    defaults write com.apple.finder AppleShowAllFiles YES
    killall Finder
}

# Hide hidden files in Finder
hide-hidden-files() {
    defaults write com.apple.finder AppleShowAllFiles NO
    killall Finder
}

# Prints a list of the longest Objective-C implementation files in a project
# (presented by Chris Eidhof (@chriseidhof) at Macoun 2013)
# An article about this topic: http://chris.eidhof.nl/post/43925321331/how-to-keep-your-classes-small-and-clean
list-implementation-files() {
    find . -path "./Pods" -prune -o \
           -path "./Tests" -prune -o \
           -path "./Dependencies" -prune -o \
           -name "*.m" -exec wc -l "{}" \; | sort -n
}
